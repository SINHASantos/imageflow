name: Windows on ARM64 Test

on:
  push:
    branches:
      - '*'
  pull_request:
  # Allow manual triggers
  workflow_dispatch:

jobs:
  test_win_arm64:
    runs-on: windows-11-arm-32gb

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Windows ARM64
        uses: ./.github/actions/setup-win-arm64

      - name: Checkout code again with git, so git commands work.
        uses: actions/checkout@v3

      - name: Set Git Environment Variables
        id: set_git_env_vars
        shell: powershell
        run: |
          $env:GIT_COMMIT = git rev-parse HEAD
          $env:GIT_COMMIT_SHORT = git rev-parse --short HEAD
          $env:GIT_OPTIONAL_TAG = if ($(git describe --tags --exact-match 2>$null)) { $(git describe --tags --exact-match) } else { '' }
          $env:GIT_DESCRIBE_ALWAYS = git describe --always --tags
          $env:GIT_DESCRIBE_ALWAYS_LONG = git describe --always --tags --long
          $env:GIT_DESCRIBE_AAL = git describe --always --all --long
          $env:GIT_OPTIONAL_BRANCH = if ($(git symbolic-ref --short HEAD 2>$null)) { $(git symbolic-ref --short HEAD) } else { '' }

          # Output the variables to GITHUB_ENV
          "GIT_COMMIT=$env:GIT_COMMIT" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "GIT_COMMIT_SHORT=$env:GIT_COMMIT_SHORT" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "GIT_OPTIONAL_TAG=$env:GIT_OPTIONAL_TAG" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "GIT_DESCRIBE_ALWAYS=$env:GIT_DESCRIBE_ALWAYS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "GIT_DESCRIBE_ALWAYS_LONG=$env:GIT_DESCRIBE_ALWAYS_LONG" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "GIT_DESCRIBE_AAL=$env:GIT_DESCRIBE_AAL" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "GIT_OPTIONAL_BRANCH=$env:GIT_OPTIONAL_BRANCH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install NASM
        uses: ./.github/actions/install-nasm

      - name: Check Build
        run: cargo check --all

      - name: Test Build
        run: cargo test --all
        env:
          RUSTFLAGS: -C target-cpu=generic

      - name: Build Release
        run: cargo build --all
        shell: bash
        env:
          RUSTFLAGS: -C target-cpu=generic

  # You can add more experimental jobs here in the future
  # test_another_experimental:
  #   runs-on: ...
  #   steps:
  #     ...
