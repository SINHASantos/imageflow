name: 'Setup Windows ARM64'
description: 'Set up Windows ARM64 environment with necessary tools'
# maybe switch to winget someday?
# Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe
runs:
  using: "composite"
  steps:

    - name: Install Git (required for actions/cache to work (tar is needed))
      shell: powershell
      run: |
        $url = "https://github.com/git-for-windows/git/releases/download/v2.47.1.windows.2/Git-2.47.1.2-arm64.exe"
        Invoke-WebRequest -Uri $url -OutFile git-installer.exe
        Start-Process -FilePath .\git-installer.exe -ArgumentList "/VERYSILENT", "/NORESTART" -Wait

    - name: Use GNU tar from Git
      shell: powershell
      run:  echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Cache tools
      uses: actions/cache@v4
      id: cache-tools
      with:
        path: |
          C:\BuildTools
          C:\Users\runneradmin\.rustup
          C:\Users\runneradmin\.cargo
          C:\Program Files (x86)\Windows Kits
        key: ${{ runner.os }}-arm64-tools-v2

    - name: Install Visual Studio Build Tools (Preview)
      if: steps.cache-tools.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        $url = "https://aka.ms/vs/17/release/vs_buildtools.exe"
        Invoke-WebRequest -Uri $url -OutFile vs_buildtools.exe
        Start-Process -FilePath .\vs_buildtools.exe -ArgumentList "--quiet", "--wait", "--norestart", "--nocache", `
          "--installPath", "C:\BuildTools", `
          "--channelUri", "https://aka.ms/vs/17/pre/channel", ` #https://aka.ms/vs/17/release/channel
          "--add", "Microsoft.VisualStudio.Component.VC.Tools.ARM64", `
          "--add", "Microsoft.VisualStudio.Component.Windows11SDK.22621" `
          -NoNewWindow -Wait
        
    - name: Install Rust
      if: steps.cache-tools.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        $url = "https://static.rust-lang.org/rustup/dist/aarch64-pc-windows-msvc/rustup-init.exe"
        Invoke-WebRequest -Uri $url -OutFile rustup-init.exe
        .\rustup-init.exe -y --default-host aarch64-pc-windows-msvc --profile minimal
        

    - name: Install NASM
      uses: ./.github/actions/install-nasm

    - name: List tool directories
      shell: powershell
      run: |
        echo listing tool directories
        ls "C:\BuildTools\Common7\Tools\"
        ls "C:\Program Files\Git\bin\"
        ls "C:\BuildTools\VC\Tools\MSVC\"
        ls "C:\Program Files (x86)\Windows Kits\10\include\"
        ls "C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt"
    - name: Adding tools to PATH/INCLUDE/LIB/LIBPATH
      shell: powershell
      env:
        msvc_ver: "14.43.34618"
        sdk_ver: "10.0.22621.0"

      run: |
        echo "Adding tools to PATH"
        echo "C:\BuildTools\Common7\Tools"  | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\Program Files\Git\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\BuildTools\VC\Tools\MSVC\$msvc_ver\bin\Hostx64\arm64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\BuildTools\VC\Tools\MSVC\$msvc_ver\bin\Hostx64\x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "$env:USERPROFILE\.cargo\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "Setting up INCLUDE, LIB, LIBPATH environment variables"
        echo "INCLUDE=C:\BuildTools\VC\Tools\MSVC\$msvc_ver\include;C:\Program Files (x86)\Windows Kits\10\include\$sdk_ver\ucrt" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LIB=C:\BuildTools\VC\Tools\MSVC\$msvc_ver\lib\arm64;C:\Program Files (x86)\Windows Kits\10\lib\$sdk_ver\ucrt\arm64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LIBPATH=C:\BuildTools\VC\Tools\MSVC\$msvc_ver\lib\arm64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
